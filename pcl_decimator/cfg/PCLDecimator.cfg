#! /usr/bin/env python

PACKAGE='pcl_decimator'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level             Description          Default    Min   Max
level = SensorLevels.RECONFIGURE_STOP
gen.add("field_name",      str_t,    level, "The axis on which to perform the multiple passthroughs", "z")   
gen.add("start_threshold", double_t, level, "The measurement at which to place the first slice."    , .2, -100.0, 100.0)
gen.add("end_threshold",   double_t, level, "The measurement at which to place the final slice."    , 1.0,-100.0, 100.0)
gen.add("leaf_size",       double_t, level, "Resolution of the voxel grid filter."                  , 0.1, 0.005, 1.0)
gen.add("num_in_radius",   int_t   , level, "Required number of inliers."                           , 10, 0, 50)
gen.add("outlier_radius",  double_t, level, "Resolution of the inlier filter."                      , 0.1, 0.005, 1.0)

exit(gen.generate(PACKAGE, "pcl_decimator.cpp", "PCLDecimator"))
