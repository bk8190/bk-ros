<!-- Nodes that control the Kinect's pan mount and associated transforms -->
<launch>
  
  <!-- Node that drives the Kinect's pan platform and publishes its transform -->
	<node pkg="head_controller" type="head_driver" name="head_driver"
		output="screen" ns="head_controller" >
		
		<remap from="/pan_command" to="/head_controller/pan_command"/>
		
		<param name="loop_rate"        value="30.0"        />
		<param name="parent_tf_frame"  value="pan_link"    />
		<param name="child_tf_frame"   value="camera_link" />
		
		<!-- Parameters for the head controller servo -->
		<param name="pan_angle_center" value="90.0"       />
		<param name="pan_angle_min"    value="0.0"         />
		<param name="pan_angle_max"    value="180.0"       />
		<param name="pan_vel_max"      value="70.0"        />
		<param name="pan_acc_max"      value="90.0"        /> <!-- 90 -->
		<param name="feedforward_kv"   value="-0.05"       />
		<param name="lpf_alpha"        value="0.4"         />
	</node>
	
	
	<!-- Node that points the Kinect's pan platform at a target -->
	<node pkg="head_controller" type="point_head.py" name="point_head"
		output="screen" ns="head_controller" >
		
		<remap from="/target_pose" to="/person_tracker/goal_with_covariance"/>
		
		<param name="rate" value="40.0"/>
	</node>
	
	
	<!-- Node plots the position, velocity, and acceleration of the head mount -->
	<node pkg="rxtools" type="rxplot" name="head_status" ns="head_controller/head_driver" args="head_pos/angular/z,head_des_pos/angular/z,head_error/angular/z,head_speed/angular/z head_current/data --period=10 --title=Head_status --legend=Position,Goal,Error,Velocity,Amps" />
	
	
	<!-- Node allows pan platform to be controlled from rviz (for debugging) -->
	<node pkg="bk_planner" type="covariance_faker" name="covariance_faker_head">
		<remap from="pose"     to="/goal"               />
		<remap from="pose_cov" to="/person_tracker/goal_with_covariance" />
	</node>
	
</launch>
