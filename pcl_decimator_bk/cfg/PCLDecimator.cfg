#! /usr/bin/env python

PACKAGE='pcl_decimator'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level             Description          Default    Min   Max
gen.add("field_name",                 str_t,    SensorLevels.RECONFIGURE_STOP,   "The axis on which to perform the multiple passthroughs",                                          "y")   
gen.add("num_slices",              int_t,    SensorLevels.RECONFIGURE_STOP,    "The number of total slices to take from the pointcloud.",                    5,         1,   99)                                                                                 
gen.add("slice_width",              double_t, SensorLevels.RECONFIGURE_STOP,    "The width of a cloud slice in meters.",                   0.01,     0.001, 100.0)
gen.add("start_threshold",              double_t, SensorLevels.RECONFIGURE_STOP,    "The measurement at which to place the first slice.",                   -1.0,      -100.0, 100.0)
gen.add("end_threshold",              double_t, SensorLevels.RECONFIGURE_STOP,    "The measurement at which to place the final slice.",                   1.0,      -100.0, 100.0)

exit(gen.generate(PACKAGE, "pcl_decimator.cpp", "PCLDecimator"))